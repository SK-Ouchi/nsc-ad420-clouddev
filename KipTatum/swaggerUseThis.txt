swagger: '2.0'
info:
  description: This is a task API
  version: 1.0.0
  title: Swagger Task
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
  - name: task
    description: Everything about your task
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: users
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /tasks:
    get:
      tags:
        - task
      summary: Finds tasks by ID
      description: Shows all tasks
      operationId: getAllTasks
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
  /users:
    get:
      tags:
        - users
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: users
          description: 'User object that needs to be retrieved. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    post:
      tags:
        - users
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  '/users/{id}':
    get:
      tags:
        - users
      summary: Get user by user name
      description: ''
      operationId: getUserById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - users
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - users
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  '/users/{id}/tasks':
    get:
      tags:
        - users
      summary: Get task by user name
      description: ''
      operationId: getUserTasksById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    post:
      tags:
        - users
      summary: Create new task for user
      description: This can only be done by the logged in user.
      operationId: createTaskByUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        default:
          description: successful operation
  '/users/{id}/tasks/{id}':
    get:
      tags:
        - users
      summary: Get taskId from username
      description: ''
      operationId: getTaskIdFromUsername
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - users
      summary: Updated taskId by Username
      description: This can only be done by the logged in user.
      operationId: updateTaskIdbyUsername
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: task id that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - users
      summary: Delete taskID by user
      description: This can only be done by the logged in user.
      operationId: deleteTaskByUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
  Task:
    type: object
    required:
      - description
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
        example: Task to do
